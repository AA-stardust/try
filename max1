
max:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 97 00 00 00       	call   10a0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 cf 2f 00 00    	add    $0x2fcf,%ebx
    100f:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <printf@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <__libc_start_main@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001050 <__cxa_finalize@plt>:
    1050:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	5e                   	pop    %esi
    1063:	89 e1                	mov    %esp,%ecx
    1065:	83 e4 f0             	and    $0xfffffff0,%esp
    1068:	50                   	push   %eax
    1069:	54                   	push   %esp
    106a:	52                   	push   %edx
    106b:	e8 22 00 00 00       	call   1092 <_start+0x32>
    1070:	81 c3 68 2f 00 00    	add    $0x2f68,%ebx
    1076:	8d 83 a8 d2 ff ff    	lea    -0x2d58(%ebx),%eax
    107c:	50                   	push   %eax
    107d:	8d 83 48 d2 ff ff    	lea    -0x2db8(%ebx),%eax
    1083:	50                   	push   %eax
    1084:	51                   	push   %ecx
    1085:	56                   	push   %esi
    1086:	ff b3 20 00 00 00    	pushl  0x20(%ebx)
    108c:	e8 af ff ff ff       	call   1040 <__libc_start_main@plt>
    1091:	f4                   	hlt    
    1092:	8b 1c 24             	mov    (%esp),%ebx
    1095:	c3                   	ret    
    1096:	66 90                	xchg   %ax,%ax
    1098:	66 90                	xchg   %ax,%ax
    109a:	66 90                	xchg   %ax,%ax
    109c:	66 90                	xchg   %ax,%ax
    109e:	66 90                	xchg   %ax,%ax

000010a0 <__x86.get_pc_thunk.bx>:
    10a0:	8b 1c 24             	mov    (%esp),%ebx
    10a3:	c3                   	ret    
    10a4:	66 90                	xchg   %ax,%ax
    10a6:	66 90                	xchg   %ax,%ax
    10a8:	66 90                	xchg   %ax,%ax
    10aa:	66 90                	xchg   %ax,%ax
    10ac:	66 90                	xchg   %ax,%ax
    10ae:	66 90                	xchg   %ax,%ax

000010b0 <deregister_tm_clones>:
    10b0:	e8 e0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10b5:	81 c2 23 2f 00 00    	add    $0x2f23,%edx
    10bb:	8d 8a 78 00 00 00    	lea    0x78(%edx),%ecx
    10c1:	8d 82 78 00 00 00    	lea    0x78(%edx),%eax
    10c7:	39 c8                	cmp    %ecx,%eax
    10c9:	74 1d                	je     10e8 <deregister_tm_clones+0x38>
    10cb:	8b 82 14 00 00 00    	mov    0x14(%edx),%eax
    10d1:	85 c0                	test   %eax,%eax
    10d3:	74 13                	je     10e8 <deregister_tm_clones+0x38>
    10d5:	55                   	push   %ebp
    10d6:	89 e5                	mov    %esp,%ebp
    10d8:	83 ec 14             	sub    $0x14,%esp
    10db:	51                   	push   %ecx
    10dc:	ff d0                	call   *%eax
    10de:	83 c4 10             	add    $0x10,%esp
    10e1:	c9                   	leave  
    10e2:	c3                   	ret    
    10e3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10e7:	90                   	nop
    10e8:	c3                   	ret    
    10e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000010f0 <register_tm_clones>:
    10f0:	e8 a0 00 00 00       	call   1195 <__x86.get_pc_thunk.dx>
    10f5:	81 c2 e3 2e 00 00    	add    $0x2ee3,%edx
    10fb:	55                   	push   %ebp
    10fc:	89 e5                	mov    %esp,%ebp
    10fe:	53                   	push   %ebx
    10ff:	8d 8a 78 00 00 00    	lea    0x78(%edx),%ecx
    1105:	8d 82 78 00 00 00    	lea    0x78(%edx),%eax
    110b:	83 ec 04             	sub    $0x4,%esp
    110e:	29 c8                	sub    %ecx,%eax
    1110:	c1 f8 02             	sar    $0x2,%eax
    1113:	89 c3                	mov    %eax,%ebx
    1115:	c1 eb 1f             	shr    $0x1f,%ebx
    1118:	01 d8                	add    %ebx,%eax
    111a:	d1 f8                	sar    %eax
    111c:	74 14                	je     1132 <register_tm_clones+0x42>
    111e:	8b 92 24 00 00 00    	mov    0x24(%edx),%edx
    1124:	85 d2                	test   %edx,%edx
    1126:	74 0a                	je     1132 <register_tm_clones+0x42>
    1128:	83 ec 08             	sub    $0x8,%esp
    112b:	50                   	push   %eax
    112c:	51                   	push   %ecx
    112d:	ff d2                	call   *%edx
    112f:	83 c4 10             	add    $0x10,%esp
    1132:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1135:	c9                   	leave  
    1136:	c3                   	ret    
    1137:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    113e:	66 90                	xchg   %ax,%ax

00001140 <__do_global_dtors_aux>:
    1140:	55                   	push   %ebp
    1141:	89 e5                	mov    %esp,%ebp
    1143:	53                   	push   %ebx
    1144:	e8 57 ff ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1149:	81 c3 8f 2e 00 00    	add    $0x2e8f,%ebx
    114f:	83 ec 04             	sub    $0x4,%esp
    1152:	80 bb 78 00 00 00 00 	cmpb   $0x0,0x78(%ebx)
    1159:	75 27                	jne    1182 <__do_global_dtors_aux+0x42>
    115b:	8b 83 18 00 00 00    	mov    0x18(%ebx),%eax
    1161:	85 c0                	test   %eax,%eax
    1163:	74 11                	je     1176 <__do_global_dtors_aux+0x36>
    1165:	83 ec 0c             	sub    $0xc,%esp
    1168:	ff b3 2c 00 00 00    	pushl  0x2c(%ebx)
    116e:	e8 dd fe ff ff       	call   1050 <__cxa_finalize@plt>
    1173:	83 c4 10             	add    $0x10,%esp
    1176:	e8 35 ff ff ff       	call   10b0 <deregister_tm_clones>
    117b:	c6 83 78 00 00 00 01 	movb   $0x1,0x78(%ebx)
    1182:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1185:	c9                   	leave  
    1186:	c3                   	ret    
    1187:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    118e:	66 90                	xchg   %ax,%ax

00001190 <frame_dummy>:
    1190:	e9 5b ff ff ff       	jmp    10f0 <register_tm_clones>

00001195 <__x86.get_pc_thunk.dx>:
    1195:	8b 14 24             	mov    (%esp),%edx
    1198:	c3                   	ret    

00001199 <main>:
    1199:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    119d:	83 e4 f0             	and    $0xfffffff0,%esp
    11a0:	ff 71 fc             	pushl  -0x4(%ecx)
    11a3:	55                   	push   %ebp
    11a4:	89 e5                	mov    %esp,%ebp
    11a6:	53                   	push   %ebx
    11a7:	51                   	push   %ecx
    11a8:	83 ec 10             	sub    $0x10,%esp
    11ab:	e8 68 00 00 00       	call   1218 <__x86.get_pc_thunk.ax>
    11b0:	05 28 2e 00 00       	add    $0x2e28,%eax
    11b5:	8b 90 48 00 00 00    	mov    0x48(%eax),%edx
    11bb:	89 55 f0             	mov    %edx,-0x10(%ebp)
    11be:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    11c5:	eb 20                	jmp    11e7 <main+0x4e>
    11c7:	8b 55 f4             	mov    -0xc(%ebp),%edx
    11ca:	8b 94 90 48 00 00 00 	mov    0x48(%eax,%edx,4),%edx
    11d1:	39 55 f0             	cmp    %edx,-0x10(%ebp)
    11d4:	7d 0d                	jge    11e3 <main+0x4a>
    11d6:	8b 55 f4             	mov    -0xc(%ebp),%edx
    11d9:	8b 94 90 48 00 00 00 	mov    0x48(%eax,%edx,4),%edx
    11e0:	89 55 f0             	mov    %edx,-0x10(%ebp)
    11e3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
    11e7:	8b 90 74 00 00 00    	mov    0x74(%eax),%edx
    11ed:	39 55 f4             	cmp    %edx,-0xc(%ebp)
    11f0:	7c d5                	jl     11c7 <main+0x2e>
    11f2:	83 ec 08             	sub    $0x8,%esp
    11f5:	ff 75 f0             	pushl  -0x10(%ebp)
    11f8:	8d 90 30 e0 ff ff    	lea    -0x1fd0(%eax),%edx
    11fe:	52                   	push   %edx
    11ff:	89 c3                	mov    %eax,%ebx
    1201:	e8 2a fe ff ff       	call   1030 <printf@plt>
    1206:	83 c4 10             	add    $0x10,%esp
    1209:	b8 00 00 00 00       	mov    $0x0,%eax
    120e:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1211:	59                   	pop    %ecx
    1212:	5b                   	pop    %ebx
    1213:	5d                   	pop    %ebp
    1214:	8d 61 fc             	lea    -0x4(%ecx),%esp
    1217:	c3                   	ret    

00001218 <__x86.get_pc_thunk.ax>:
    1218:	8b 04 24             	mov    (%esp),%eax
    121b:	c3                   	ret    
    121c:	66 90                	xchg   %ax,%ax
    121e:	66 90                	xchg   %ax,%ax

00001220 <__libc_csu_init>:
    1220:	55                   	push   %ebp
    1221:	57                   	push   %edi
    1222:	56                   	push   %esi
    1223:	53                   	push   %ebx
    1224:	e8 77 fe ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    1229:	81 c3 af 2d 00 00    	add    $0x2daf,%ebx
    122f:	83 ec 0c             	sub    $0xc,%esp
    1232:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    1236:	e8 c5 fd ff ff       	call   1000 <_init>
    123b:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
    1241:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
    1247:	29 c6                	sub    %eax,%esi
    1249:	c1 fe 02             	sar    $0x2,%esi
    124c:	74 1f                	je     126d <__libc_csu_init+0x4d>
    124e:	31 ff                	xor    %edi,%edi
    1250:	83 ec 04             	sub    $0x4,%esp
    1253:	55                   	push   %ebp
    1254:	ff 74 24 2c          	pushl  0x2c(%esp)
    1258:	ff 74 24 2c          	pushl  0x2c(%esp)
    125c:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
    1263:	83 c7 01             	add    $0x1,%edi
    1266:	83 c4 10             	add    $0x10,%esp
    1269:	39 fe                	cmp    %edi,%esi
    126b:	75 e3                	jne    1250 <__libc_csu_init+0x30>
    126d:	83 c4 0c             	add    $0xc,%esp
    1270:	5b                   	pop    %ebx
    1271:	5e                   	pop    %esi
    1272:	5f                   	pop    %edi
    1273:	5d                   	pop    %ebp
    1274:	c3                   	ret    
    1275:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    127c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001280 <__libc_csu_fini>:
    1280:	c3                   	ret    

Disassembly of section .fini:

00001284 <_fini>:
    1284:	53                   	push   %ebx
    1285:	83 ec 08             	sub    $0x8,%esp
    1288:	e8 13 fe ff ff       	call   10a0 <__x86.get_pc_thunk.bx>
    128d:	81 c3 4b 2d 00 00    	add    $0x2d4b,%ebx
    1293:	83 c4 08             	add    $0x8,%esp
    1296:	5b                   	pop    %ebx
    1297:	c3                   	ret    
Contents of the .eh_frame section:


00000000 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 8
  Augmentation data:     1b
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_offset: r8 (eip) at cfa-4
  DW_CFA_undefined: r8 (eip)

00000018 00000010 0000001c FDE cie=00000000 pc=00001060..00001096
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000002c 00000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -4
  Return address column: 8
  Augmentation data:     1b
  DW_CFA_def_cfa: r4 (esp) ofs 4
  DW_CFA_offset: r8 (eip) at cfa-4
  DW_CFA_nop
  DW_CFA_nop

00000044 00000020 0000001c FDE cie=0000002c pc=00001020..00001050
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 6 to 00001026
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 10 to 00001030
  DW_CFA_def_cfa_expression (DW_OP_breg4 (esp): 4; DW_OP_breg8 (eip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit11; DW_OP_ge; DW_OP_lit2; DW_OP_shl; DW_OP_plus)

00000068 00000010 00000040 FDE cie=0000002c pc=00001050..00001058
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000007c 00000030 00000054 FDE cie=0000002c pc=00001199..00001218
  DW_CFA_advance_loc: 4 to 0000119d
  DW_CFA_def_cfa: r1 (ecx) ofs 0
  DW_CFA_advance_loc: 7 to 000011a4
  DW_CFA_expression: r5 (ebp) (DW_OP_breg5 (ebp): 0)
  DW_CFA_advance_loc: 4 to 000011a8
  DW_CFA_def_cfa_expression (DW_OP_breg5 (ebp): -8; DW_OP_deref)
  DW_CFA_expression: r3 (ebx) (DW_OP_breg5 (ebp): -4)
  DW_CFA_advance_loc1: 106 to 00001212
  DW_CFA_restore: r1 (ecx)
  DW_CFA_def_cfa: r1 (ecx) ofs 0
  DW_CFA_advance_loc: 1 to 00001213
  DW_CFA_restore: r3 (ebx)
  DW_CFA_advance_loc: 1 to 00001214
  DW_CFA_restore: r5 (ebp)
  DW_CFA_advance_loc: 3 to 00001217
  DW_CFA_def_cfa: r4 (esp) ofs 4

000000b0 00000010 00000088 FDE cie=0000002c pc=00001218..0000121c
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000c4 00000048 0000009c FDE cie=0000002c pc=00001220..00001275
  DW_CFA_advance_loc: 1 to 00001221
  DW_CFA_def_cfa_offset: 8
  DW_CFA_offset: r5 (ebp) at cfa-8
  DW_CFA_advance_loc: 1 to 00001222
  DW_CFA_def_cfa_offset: 12
  DW_CFA_offset: r7 (edi) at cfa-12
  DW_CFA_advance_loc: 1 to 00001223
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r6 (esi) at cfa-16
  DW_CFA_advance_loc: 1 to 00001224
  DW_CFA_def_cfa_offset: 20
  DW_CFA_offset: r3 (ebx) at cfa-20
  DW_CFA_advance_loc: 14 to 00001232
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 33 to 00001253
  DW_CFA_def_cfa_offset: 36
  DW_CFA_advance_loc: 1 to 00001254
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 4 to 00001258
  DW_CFA_def_cfa_offset: 44
  DW_CFA_advance_loc: 4 to 0000125c
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 13 to 00001269
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 7 to 00001270
  DW_CFA_def_cfa_offset: 20
  DW_CFA_advance_loc: 1 to 00001271
  DW_CFA_restore: r3 (ebx)
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 1 to 00001272
  DW_CFA_restore: r6 (esi)
  DW_CFA_def_cfa_offset: 12
  DW_CFA_advance_loc: 1 to 00001273
  DW_CFA_restore: r7 (edi)
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 1 to 00001274
  DW_CFA_restore: r5 (ebp)
  DW_CFA_def_cfa_offset: 4
  DW_CFA_nop
  DW_CFA_nop

00000110 00000010 000000e8 FDE cie=0000002c pc=00001280..00001281
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000124 ZERO terminator


